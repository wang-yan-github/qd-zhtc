# 变量
variables:
  MAVEN_CLI_OPTS: "-s .m2/settings-nexus.xml --batch-mode -Dmaven.test.skip=true -Dmaven.repo.local=.m2/repository -DaltDeploymentRepository=wangyan_hosted::default::http://nexus:8081/repository/wangyan_hosted"
  API_PATH: 'zhtc-web'
  API_NAME: 'qd-zhtc-web'
  API_MQTT_PATH: 'zhtc-mqtt'
  API_MQTT_NAME: 'qd-zhtc-mqtt'
  WEB_PATH: 'vue-manage'
  WEB_NAME: 'qd-zhtc'

# 缓存
cache:
  paths:
    - .m2/repository

# 阶段
stages:
  - maven install
  - maven package
  - deploy jar
  - maven mqtt install
  - maven mqtt package
  - deploy mqtt jar
  - npm install
  - build vue
  - deploy vue


maven install:
  image: maven:3.6.3-jdk-8-slim
  stage: maven install
  cache:
    paths:
      - $API_PATH/target/
  only:
    - install
    - maven-install
  script:
    - echo "=============== 开始编译任务  ==============="
    - ls -l
    - mvn $MAVEN_CLI_OPTS clean compile package deploy
    - ls -l
    - cd $API_PATH/target
    - ls -l
    - echo "=============== 执行结束 ==================="

maven package:
  image: maven:3.6.3-jdk-8-slim
  stage: maven package
  cache:
    paths:
      - $API_PATH/target/
  only:
    - build
  script:
    - echo "=============== 开始编译任务  ==============="
    - ls -l
    - mvn $MAVEN_CLI_OPTS package
    - ls -l
    - cd $API_PATH/target
    - ls -l
    - echo "=============== 执行结束 ==================="

deploy jar:
  image: docker
  stage: deploy jar
  cache:
    paths:
      - $API_PATH/target/
  only:
    - build
  script:
    - echo "=============== 开始部署任务  ==============="
    - cd $API_PATH
    - docker build --build-arg BUILD_DIR=./target -t $API_NAME:last .
    - if [ "$(docker ps -aq --filter name=$API_NAME)" ]; then docker rm -f $API_NAME;fi
    - docker run -d --network=my-network --name=$API_NAME $API_NAME:last
    - echo "=============== 执行结束 ==================="

maven mqtt install:
  image: maven:3.6.3-jdk-8-slim
  stage: maven mqtt install
  cache:
    paths:
      - $API_MQTT_PATH/target/
  only:
    - install
    - maven-mqtt-install
  script:
    - echo "=============== 开始编译任务  ==============="
    - ls -l
    - mvn $MAVEN_CLI_OPTS clean compile package deploy
    - ls -l
    - cd $API_MQTT_PATH/target
    - ls -l
    - echo "=============== 执行结束 ==================="

maven mqtt package:
  image: maven:3.6.3-jdk-8-slim
  stage: maven mqtt package
  cache:
    paths:
      - $API_MQTT_PATH/target/
  only:
    - build
  script:
    - echo "=============== 开始编译任务  ==============="
    - ls -l
    - mvn $MAVEN_CLI_OPTS package
    - ls -l
    - cd $API_MQTT_PATH/target
    - ls -l
    - echo "=============== 执行结束 ==================="

deploy mqtt jar:
  image: docker
  stage: deploy mqtt jar
  cache:
    paths:
      - $API_MQTT_PATH/target/
  only:
    - build
  script:
    - echo "=============== 开始部署任务  ==============="
    - cd $API_MQTT_PATH
    - docker build --build-arg BUILD_DIR=./target -t $API_MQTT_NAME:last .
    - if [ "$(docker ps -aq --filter name=$API_MQTT_NAME)" ]; then docker rm -f $API_MQTT_NAME;fi
    - docker run -d --network=my-network --name=$API_MQTT_NAME $API_MQTT_NAME:last
    - echo "=============== 执行结束 ==================="

npm install:
  image: node:18
  stage: npm install
  cache:
    paths:
      - $WEB_PATH/node_modules/
  only:
    - install
    - npm-install
  script:
    - echo "=============== 开始安装任务  ==============="
    - cd $WEB_PATH
    - ls -l
    - echo "deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free" > /etc/apt/sources.list
    - echo "deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free" >> /etc/apt/sources.list
    - echo "deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-security main contrib non-free" >> /etc/apt/sources.list
    - apt-get update
    - apt-get install libpango1.0-dev
    - npm install canvas@2.9.3 --build-from-source --legacy-peer-deps
    - npm install --global pnpm
    - pnpm install
    - ls -l
    - echo "=============== 执行结束 ==================="

build vue:
  image: node:18
  stage: build vue
  cache:
    paths:
      - $WEB_PATH/node_modules/
  only:
    - build
  script:
    - echo "=============== 开始打包任务  ==============="
    - cd $WEB_PATH
    - ls -l
    - npm run build
    - ls -l
    - rm -rf $WEB_PATH
    - mv dist $WEB_PATH
    - echo "=============== 执行结束 ==================="

deploy vue:
  image: docker
  stage: deploy vue
  cache:
    paths:
      - $WEB_PATH/target/
  only:
    - build
  script:
    - echo "=============== 开始部署任务  ==============="
    - cd $WEB_PATH
    - ls
    - docker cp $WEB_PATH gitlab-runner:/html/$CONTAINER_WEB_NAME
    - echo "=============== 执行结束 ==================="